close all
clear all

startdir = 'C:\olivia\data\savings chapter';
%startdir = 'C:\Users\kimol\Documents\MATLAB';
cd(startdir)
load('190920_compiledForSavingsChapter_dayData.mat')
load('190920_compiledTrialsForSavingsChapter.mat')
load('190920_compiledForSavingsChapter_block20Data.mat')
load('190920_compiledForSavingsChapter_block10Data.mat')

% start out looking at regular extinction
mice = {'OK001';...
    'OK002';...
    'OK003';...
    'OK004';...
    'OK005';...
    'OK006';...
    'OK007';...
    'OK008'};




starthere = 1;
for m = 1:length(mice)
    
    mouseidx = [];
    while strcmpi(block10dat.mouse{starthere}, mice(m,1))
        mouseidx = [mouseidx;starthere];
        starthere = starthere+1;
        if starthere > length(block10dat.mouse)
            break
        end
    end
    
    day = block10dat.day(mouseidx,1);
    cradjamp = block10dat.cradjamp(mouseidx,1);
    crprob = block10dat.crprob(mouseidx,1);
    sesstype = {};
    extidx = zeros(length(mouseidx),1);
    for i = 1:length(mouseidx)
        sesstype = [sesstype; block10dat.sesstype{mouseidx(i),1}];
        if strcmpi(block10dat.sesstype{mouseidx(i),1}, 'extinction')
            extidx(mouseidx(i),1) = 1;
        end
    end
    
    
    % we also want to take the blocks from the 2 preceeding days (only had
    % 2 day performance criterion, & extinction proceeds so rapidly that we
    % don't really want to include more than 2 days of extinction training
    % in the analysis)
    %       we are using the block 10 data, so we can expect that there
    %       will be 10 blocks/day (based on the way things were set up in
    %       the getDayData script) --> we want to include another 30 blocks
    %       back from where the first extidx is
    temp = find(extidx);
    startbaseline = temp(1) - 20;
    endbaseline = temp(1) - 1;
    
    bslnidx = zeros(length(mouseidx),1);
    bslnidx(startbaseline:endbaseline, 1) = 1;
    
    %% check CRAdjamp
    % plot the data to make sure things are looking reasonable
    plotme_bsln = block10dat.cradjamp(bslnidx==1);
    plotme_ext = block10dat.cradjamp(extidx==1);
    figure
    scatter(1:length(plotme_bsln), plotme_bsln)
    hold on
    scatter(21:length(plotme_ext)+20, plotme_ext)
    plot([10.5 10.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([20.5 20.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([30.5 30.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([40.5 40.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([50.5 50.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([60.5 60.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([70.5 70.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([80.5 80.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([90.5 90.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([100.5 100.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([110.5 110.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([120.5 120.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    xlim([0 length(plotme_ext)+21])
    ylim([0 1])
    ylabel('cradjamp')
    
    if sum(isnan(plotme_ext))>0
        disp('NAN FOUND IN plotme_ext')
        pause
        % pause here to catch any nan's that made it into the extinction dataset. i
        % don't think there should have been any but just in case
    end
    
    % there are nans in the final baseline data blocks, maybe due to
    % squinting?
%     if sum(isnan(plotme_bsln))>0
%         disp('NAN FOUND IN plotme_bsln')
%         pause
%         % pause here to catch whether any nans made it into this part of
%         % the dataset. it is possible but unlikely at this point
%     end
    
    % Get the differences between performance in the first block and the
    % last block during baseline days and during extinction days.
    %       recall that each day has 10 blocks
    %       recall that the last block for a day might be a nan
    firstBlk_bsln(m, 1) = plotme_bsln(1,1);
    lastBlk_bsln(m, 1) = plotme_bsln(10,1);
    subtr = 1;
    while isnan(lastBlk_bsln(m,1)) % this will break if all the data from the day are nans, but that shouldn't happen anyway so if it breaks here it will be something like a good catch for that problem in the dataset
        lastBlk_bsln(m, 1) = plotme_bsln(10-subtr,1);
        subtr = subtr+1;
    end
    
    firstBlk_bsln(m, 2) = plotme_bsln(11,1);
    lastBlk_bsln(m, 2) = plotme_bsln(20,1);
    subtr = 1;
    while isnan(lastBlk_bsln(m,2)) % this will break if all the data from the day are nans, but that shouldn't happen anyway so if it breaks here it will be something like a good catch for that problem in the dataset
        lastBlk_bsln(m, 2) = plotme_bsln(20-subtr,1);
        subtr = subtr+1;
    end
    
    firstBlk_ext(m, 1) = plotme_ext(1,1);
    lastBlk_ext(m, 1) = plotme_ext(10,1);
    firstBlk_ext(m, 2) = plotme_ext(11,1);
    lastBlk_ext(m, 2) = plotme_ext(20,1);
    firstBlk_ext(m, 3) = plotme_ext(21,1);
    lastBlk_ext(m, 3) = plotme_ext(30,1);
    
    btwnSessDiffs_bsln(m,1) = firstBlk_bsln(m,2) - lastBlk_bsln(m,1);
    btwnSessDiffs_ext(m,1) = firstBlk_ext(m,2) - lastBlk_ext(m,1);
    btwnSessDiffs_ext(m,2) = firstBlk_ext(m,3) - lastBlk_ext(m,2);
    
    %% repeat for CRProb
    % plot the data to make sure things are looking reasonable
    plotme_bslnprob = block10dat.crprob(bslnidx==1);
    plotme_extprob = block10dat.crprob(extidx==1);
    figure
    scatter(1:length(plotme_bslnprob), plotme_bslnprob)
    hold on
    scatter(21:length(plotme_extprob)+20, plotme_extprob)
    plot([10.5 10.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([20.5 20.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([30.5 30.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([40.5 40.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([50.5 50.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([60.5 60.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([70.5 70.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([80.5 80.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([90.5 90.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([100.5 100.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([110.5 110.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    plot([120.5 120.5], [0 1], 'LineStyle', ':', 'Color', [0 0 0])
    xlim([0 length(plotme_extprob)+21])
    ylim([0 1])
    ylabel('prob')
    
    if sum(isnan(plotme_extprob))>0
        disp('NAN FOUND IN plotme_ext')
        pause
        % pause here to catch any nan's that made it into the extinction dataset. i
        % don't think there should have been any but just in case
    end
    
    % there are nans in the final baseline data blocks, maybe due to
    % squinting?
%     if sum(isnan(plotme_bsln))>0
%         disp('NAN FOUND IN plotme_bsln')
%         pause
%         % pause here to catch whether any nans made it into this part of
%         % the dataset. it is possible but unlikely at this point
%     end
    
    % Get the differences between performance in the first block and the
    % last block during baseline days and during extinction days.
    %       recall that each day has 10 blocks
    %       recall that the last block for a day might be a nan
    firstBlk_bslnprob(m, 1) = plotme_bslnprob(1,1);
    lastBlk_bslnprob(m, 1) = plotme_bslnprob(10,1);
    subtr = 1;
    while isnan(lastBlk_bslnprob(m,1)) % this will break if all the data from the day are nans, but that shouldn't happen anyway so if it breaks here it will be something like a good catch for that problem in the dataset
        lastBlk_bslnprob(m, 1) = plotme_bslnprob(10-subtr,1);
        subtr = subtr+1;
    end
    
    firstBlk_bslnprob(m, 2) = plotme_bslnprob(11,1);
    lastBlk_bslnprob(m, 2) = plotme_bslnprob(20,1);
    subtr = 1;
    while isnan(lastBlk_bslnprob(m,2)) % this will break if all the data from the day are nans, but that shouldn't happen anyway so if it breaks here it will be something like a good catch for that problem in the dataset
        lastBlk_bslnprob(m, 2) = plotme_bslnprob(20-subtr,1);
        subtr = subtr+1;
    end
    
    firstBlk_extprob(m, 1) = plotme_extprob(1,1);
    lastBlk_extprob(m, 1) = plotme_extprob(10,1);
    firstBlk_extprob(m, 2) = plotme_extprob(11,1);
    lastBlk_extprob(m, 2) = plotme_extprob(20,1);
    firstBlk_extprob(m, 3) = plotme_extprob(21,1);
    lastBlk_extprob(m, 3) = plotme_extprob(30,1);
    
    btwnSessDiffs_bslnprob(m,1) = firstBlk_bslnprob(m,2) - lastBlk_bslnprob(m,1);
    btwnSessDiffs_extprob(m,1) = firstBlk_extprob(m,2) - lastBlk_extprob(m,1);
    btwnSessDiffs_extprob(m,2) = firstBlk_extprob(m,3) - lastBlk_extprob(m,2);
end

[h, p] = ttest(btwnSessDiffs_bsln, btwnSessDiffs_ext(:,1));
[p, h] = signrank(btwnSessDiffs_bsln, btwnSessDiffs_ext(:,1));
figure
plot([0 3], [0 0], '--', 'Color', [0.5 0.5 0.5])
hold on
boxplot([btwnSessDiffs_bsln, btwnSessDiffs_ext(:,1)])
for i = 1:8
    plot([1; 2], [btwnSessDiffs_bsln(i,1); btwnSessDiffs_ext(i,1)], '--o', 'Color', [0 0 0])
end
ylabel('CR Amp Beginning (sess n) - CR Amp End (sess n-1)')
% Negative values on y axis means that the animal did worse at the
% beginning of the subsequent session compared to the previous session
% (last block is higher than first block).
% Positive values on the y axis means that the animal did better at the
% beginning of the subsequent session compared to the previous session
% (last block is lower than first block).


[h, p] = ttest(btwnSessDiffs_bslnprob, btwnSessDiffs_extprob(:,1));
[p, h] = signrank(btwnSessDiffs_bslnprob, btwnSessDiffs_extprob(:,1));
figure
plot([0 3], [0 0], '--', 'Color', [0.5 0.5 0.5])
hold on
boxplot([btwnSessDiffs_bslnprob, btwnSessDiffs_ext(:,1)])
for i = 1:8
    plot([1; 2], [btwnSessDiffs_bsln(i,1); btwnSessDiffs_ext(i,1)], '--o', 'Color', [0 0 0])
end
ylabel('CR Amp Beginning (sess n) - CR Amp End (sess n-1)')
%% now check the unpaired extinction mice


